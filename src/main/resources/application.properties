# Swagger springdoc-ui Configuration
springdoc.packages-to-scan=com.springboot.security
springdoc.default-consumes-media-type=application/json;charset=UTF-8
springdoc.default-produces-media-type=application/json;charset=UTF-8
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.operations-sorter=alpha
springdoc.api-docs.path=/api-docs/json
springdoc.api-docs.groups.enabled=true
springdoc.cache.disabled=true

# MySQL 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# DB Source URL 설정
#spring.datasource.url=jdbc:mysql://<IP>:<PORT>/<DB NAME>?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul
spring.datasource.url=jdbc:mysql://localhost:3306/springboot?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul

# DB 사용자 이름 설정
#spring.datasource.username=<MySQL ID>
spring.datasource.username=root

# DB 사용자이름에 대한 암호 설정
#spring.datasource.password=<MySQL PASSWORD>
spring.datasource.password=12345678

# true 설정 시, JPA 쿼리문 확인 가능
spring.jpa.show-sql=true
# JPA의 구현체인 Hibernate가 동작하면서, 발생한 SQL의 가독성을 높여줌.
spring.jpa.properties.hibernate.format_sql=true

# DDL(create, alter, drop) 정의 시, DB의 고유 기능을 사용할 수 있음.
spring.jpa.hibernate.ddl-auto=create

spring.jpa.properties.hibernate.highlight_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

#Security JWT
springboot.jwt.secret=flature!@#

